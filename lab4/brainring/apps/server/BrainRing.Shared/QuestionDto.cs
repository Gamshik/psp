// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BrainRing.Shared;
//
//    var questionDto = QuestionDto.FromJson(jsonString);

namespace BrainRing.Shared
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class QuestionDto
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("text")]
        public string Text { get; set; }

        [JsonProperty("options")]
        public string[] Options { get; set; }

        [JsonProperty("number")]
        public long[] Number { get; set; }
    }

    public partial class QuestionDto
    {
        public static QuestionDto FromJson(string json) => JsonConvert.DeserializeObject<QuestionDto>(json, BrainRing.Shared.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this QuestionDto self) => JsonConvert.SerializeObject(self, BrainRing.Shared.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
