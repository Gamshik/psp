// <auto-generated />
using System;
using BrainRing.DbAdapter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrainRing.DAL.Migrations
{
    [DbContext(typeof(BrainRingDbContext))]
    [Migration("20251022220642_Add_Id_For_GameSessionUser_Entity")]
    partial class Add_Id_For_GameSessionUser_Entity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.AnswerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SelectedOptionIndex")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("QuestionId", "UserId")
                        .IsUnique();

                    b.ToTable("AnswerEntity");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.GameSessionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CurrentQuestionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HostId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("CurrentQuestionId");

                    b.HasIndex("HostId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.GameSessionUserEntity", b =>
                {
                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("GameSessionId", "UserId");

                    b.HasIndex("UserId");

                    b.HasIndex("GameSessionId", "UserId")
                        .IsUnique();

                    b.ToTable("GameSessionUsers");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.QuestionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CorrectOptionIndex")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.QuestionOptionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptionEntity");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.AnswerEntity", b =>
                {
                    b.HasOne("BrainRing.DbAdapter.Entities.QuestionEntity", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrainRing.DbAdapter.Entities.UserEntity", "User")
                        .WithMany("Answers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.GameSessionEntity", b =>
                {
                    b.HasOne("BrainRing.DbAdapter.Entities.QuestionEntity", "CurrentQuestion")
                        .WithMany("CurrentQuestions")
                        .HasForeignKey("CurrentQuestionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BrainRing.DbAdapter.Entities.UserEntity", "Host")
                        .WithMany("HostSessions")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CurrentQuestion");

                    b.Navigation("Host");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.GameSessionUserEntity", b =>
                {
                    b.HasOne("BrainRing.DbAdapter.Entities.GameSessionEntity", "GameSession")
                        .WithMany("Participants")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrainRing.DbAdapter.Entities.UserEntity", "User")
                        .WithMany("GameSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("GameSession");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.QuestionEntity", b =>
                {
                    b.HasOne("BrainRing.DbAdapter.Entities.GameSessionEntity", "GameSession")
                        .WithMany("Questions")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.QuestionOptionEntity", b =>
                {
                    b.HasOne("BrainRing.DbAdapter.Entities.QuestionEntity", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.GameSessionEntity", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.QuestionEntity", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("CurrentQuestions");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("BrainRing.DbAdapter.Entities.UserEntity", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("GameSessions");

                    b.Navigation("HostSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
